/**
 * Generated by orval v6.23.0 🍺
 * Do not edit manually.
 * DummyJSON API
 * DummyJSON API
 * OpenAPI spec version: 0.0.5
 */
import { useMutation } from '@tanstack/react-query';
import type {
  MutationFunction,
  UseMutationOptions,
} from '@tanstack/react-query';

import type { PostAuthLoginBody } from '../../../model/postAuthLoginBody';
import type { User } from '../../../model/user';
import { customAxiosInstance } from '../../customAxiosInstance';
import type { ErrorType } from '../../customAxiosInstance';

/**
 * @summary login
 */
export const postAuthLogin = (postAuthLoginBody: PostAuthLoginBody) => {
  return customAxiosInstance<User>({
    url: `/auth/login`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: postAuthLoginBody,
  });
};

export const getPostAuthLoginMutationOptions = <
  TError = ErrorType<void>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAuthLogin>>,
    TError,
    { data: PostAuthLoginBody },
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postAuthLogin>>,
  TError,
  { data: PostAuthLoginBody },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postAuthLogin>>,
    { data: PostAuthLoginBody }
  > = (props) => {
    const { data } = props ?? {};

    return postAuthLogin(data);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostAuthLoginMutationResult = NonNullable<
  Awaited<ReturnType<typeof postAuthLogin>>
>;
export type PostAuthLoginMutationBody = PostAuthLoginBody;
export type PostAuthLoginMutationError = ErrorType<void>;

/**
 * @summary login
 */
export const usePostAuthLogin = <
  TError = ErrorType<void>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAuthLogin>>,
    TError,
    { data: PostAuthLoginBody },
    TContext
  >;
}) => {
  const mutationOptions = getPostAuthLoginMutationOptions(options);

  return useMutation(mutationOptions);
};
